qid:{dev,ino,type,v}
{fid,q,ofs
	auth:{pidstatus,r,w,uname,aname}
	:{fd,pfd,dirent,name}}
MLEN=0,BUF,NEW,GOT,WLK,TAGLK
FS[MXF],FLK,QS,QC=0,QLK

sd9p dir [authcmd [arg ...]]
BUF=mlc(MINL)
init NEW,GOT,STRERR,WTAGFQLK
0..FS:.fid=NOFID
ts[TC]
0..TC-:
	init ts[i].{msg,lk,tag}
	ts[i].t=t(&t[i])
forever:
read size[4], type[1], tag[2]
if !MLEN & type ! v:
	read msg, err
if type=version:
	msize[4], size[2], version
	if not 9P2000 (ncmp): unknown
	if len < MINL: err
	update MLEN & BUF
	for 0..TC-:
		lk{ts[i].msg=die},SIGUSR1
	rm FIDS
	say rversion tag size 9P2000
elif type=flush:
	if NOTAG: say flush
	.w TAGLK
	for 0..TC-:	ts[i].tag match:
		lk{ts[i].msg=flush},SIGUSR1
		swap tag,found,break
	w TAGLK.
	if !found: say flush
else:
	post(NEW)
	while wait(GOT): ! EINTR: die

/worker {msg,mlk,tag}/
len=0,buf=NULL
forever:
while wait(NEW): ! EINTR: die
if len!=LEN:free,malloc,len=LEN
swap BUF,buf
t.msg=NONE
memcpy(t.tag,buf+5,2)
lk alert
post GOT
if tag=NOTAG:err
switch type:
case auth:
	if no args+1: err,END
	afid[4] uname[s] aname[s]
	clean aname
	.w FLK
	i0..MXF: NOFID,break
	i=MXF?err:
		pipe+fork+exec args
		update FC entry
		say Rauth qid
	w FLK.
case attach:
	fid[4] afid[4] uname[s] aname[s]
	clean aname
	args:
		afid=NOFID:err,AFREE
		.w FLK
		afid?err;uname?err;aname?err
		w FLK.;err=>END
	path=argv1+aname
	unlk{open}
	flushabort: goto AFREE
	err: say it, goto AFREE
	unlk{fstat}
	flushabort: goto AFREE
	err: say it, goto AFREE
	.w FLK
	fid?err
	set fid stuff
	w FLK.
	AFREE: free aname,uname,path
case walk:
	pfd=-1, wnames*=NULL, fname=NULL
	fid[4] newfid[4] nwname[2]
	check nwname<=16
	wnames=calloc(char**wnames)
	0..nwname-:
		len,relpath,no . !end /,parses
	err=0 .r FLK
	fid: fd-?
	qid, aqid, dup pfd, copy f?name
	r FLK. err=>WFREE
	0..nwname-:  //open that f's pfd
		newpfdname;
		..:unlk{fstat(pfd)};aqid?.:..
		else:name
		unlk{tmp,pfd=oat(pfd,new...)}
		name=nwname[i]
		unlk{fstatat(pfd,name)}
		wqid
	WFREE: pfd,wnames free all,fname
default:
	sayerr
END:
.r TAGLOCK
msg==FLUSH?say flush,=NONE
tag=NOTAG
r TAGLOCK.
unlk alert

SIGPIPE?
VERSION PARENT DIRECTORY?
CLOSE HANGING? (async close?)

EWONTFIX:
close,open,write
open, (mv), ..
fid1,fid2,rename fid1, open fid2
bad st_{dev,ino}
signal before hanging syscall?
